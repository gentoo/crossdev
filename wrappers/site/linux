ac_cv_file__usr_share_sgml_X11_defs_ent=1
ac_cv_func_calloc_0_nonnull=yes
ac_cv_func_setgrent_void=yes
ac_cv_func_strnlen_working=yes
ac_cv_header_pwd_h=yes
enable_malloc0returnsnull=yes
gl_cv_func_malloc_0_nonnull=yes
glib_cv___va_copy=yes
glib_cv_has__inline=yes
glib_cv_has__inline__=yes
glib_cv_hasinline=yes
glib_cv_rtldglobal_broken=no
glib_cv_sane_realloc=yes
glib_cv_stack_grows=no
glib_cv_uscore=no
glib_cv_va_copy=yes
glib_cv_va_val_copy=no
gio_can_sniff=yes

# The AC_FUNC_MMAP macro uses AC_RUN to determine if support is available, and
# sets the result to no when cross-compiling.  Since we know Linux supports this
# everywhere, mark the test as yes.
ac_cv_func_mmap_fixed_mapped=yes

# coreutils. https://bugs.gentoo.org/show_bug.cgi?id=177061
fu_cv_sys_stat_statvfs=yes
gl_cv_func_rename_trailing_dest_slash_bug=no
gl_cv_func_rename_trailing_slash_bug=no

# urandom
ac_cv_file___dev_urandom_=yes
# zero
ac_cv_file__dev_zero=yes


ac_cv_file__bin_bash=yes
ac_cv_file__dev_ptmx=yes
ac_cv_file__dev_ptc=no
ac_cv_file__dev_srandom=yes
ac_cv_file__dev_urandom=yes
ac_cv_file__dev_random=yes
ac_cv_file__dev_arandom=no

# app-shells/bash-4.0
bash_cv_job_control_missing=present

yeti_cv_func_scanf_modif_size_t=z

gl_cv_func_btowc_eof=yes

# screen
screen_cv_sys_bcopy_overlap=${screen_cv_sys_bcopy_overlap=no}
screen_cv_sys_memcpy_overlap=${screen_cv_sys_memcpy_overlap=no}
screen_cv_sys_memmove_overlap=${screen_cv_sys_memmove_overlap=no}
screen_cv_sys_fifo_broken_impl=${screen_cv_sys_fifo_broken_impl=yes}
screen_cv_sys_fifo_usable=${screen_cv_sys_fifo_usable=yes}
screen_cv_sys_select_broken_retval=${screen_cv_sys_select_broken_retval=no}
screen_cv_sys_sockets_nofs=${screen_cv_sys_sockets_nofs=no}
screen_cv_sys_sockets_usable=${screen_cv_sys_sockets_usable=yes}
screen_cv_sys_terminfo_used=${screen_cv_sys_terminfo_used=yes}

# Python
ac_cv_working_tzset=${ac_cv_working_tzset=yes}
